name: "random_normal/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: ",\001\000\000\020\003\000\000"
    }
  }
}
name: "random_normal/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "random_normal/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "random_normal/RandomStandardNormal"
op: "RandomStandardNormal"
input: "random_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "random_normal/mul"
op: "Mul"
input: "random_normal/RandomStandardNormal"
input: "random_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "random_normal"
op: "Add"
input: "random_normal/mul"
input: "random_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "mul/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.05050762742757797
    }
  }
}
name: "mul"
op: "Mul"
input: "random_normal"
input: "mul/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "W1"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
      dim {
        size: 784
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "W1/Assign"
op: "Assign"
input: "W1"
input: "mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "W1/read"
op: "Identity"
input: "W1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W1"
    }
  }
}
name: "random_normal_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: ",\001\000\000,\001\000\000"
    }
  }
}
name: "random_normal_1/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "random_normal_1/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "random_normal_1/RandomStandardNormal"
op: "RandomStandardNormal"
input: "random_normal_1/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "random_normal_1/mul"
op: "Mul"
input: "random_normal_1/RandomStandardNormal"
input: "random_normal_1/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "random_normal_1"
op: "Add"
input: "random_normal_1/mul"
input: "random_normal_1/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "mul_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.08164966106414795
    }
  }
}
name: "mul_1"
op: "Mul"
input: "random_normal_1"
input: "mul_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "W2"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "W2/Assign"
op: "Assign"
input: "W2"
input: "mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "W2/read"
op: "Identity"
input: "W2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W2"
    }
  }
}
name: "random_normal_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\n\000\000\000,\001\000\000"
    }
  }
}
name: "random_normal_2/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "random_normal_2/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "random_normal_2/RandomStandardNormal"
op: "RandomStandardNormal"
input: "random_normal_2/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
name: "random_normal_2/mul"
op: "Mul"
input: "random_normal_2/RandomStandardNormal"
input: "random_normal_2/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "random_normal_2"
op: "Add"
input: "random_normal_2/mul"
input: "random_normal_2/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "mul_2/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.08164966106414795
    }
  }
}
name: "mul_2"
op: "Mul"
input: "random_normal_2"
input: "mul_2/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "W3"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10
      }
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "W3/Assign"
op: "Assign"
input: "W3"
input: "mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "W3/read"
op: "Identity"
input: "W3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W3"
    }
  }
}
name: "b1/initial_value"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
        dim {
          size: 1
        }
      }
      tensor_content
    }
  }
}
name: "b1"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "b1/Assign"
op: "Assign"
input: "b1"
input: "b1/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "b1/read"
op: "Identity"
input: "b1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b1"
    }
  }
}
name: "b2/initial_value"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
        dim {
          size: 1
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
name: "b2"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "b2/Assign"
op: "Assign"
input: "b2"
input: "b2/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "b2/read"
op: "Identity"
input: "b2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b2"
    }
  }
}
name: "b3/initial_value"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
name: "b3"
op: "VariableV2"
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10
      }
      dim {
        size: 1
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
name: "b3/Assign"
op: "Assign"
input: "b3"
input: "b3/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "b3/read"
op: "Identity"
input: "b3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b3"
    }
  }
}
name: "X"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 784
      }
      dim {
        size: -1
      }
    }
  }
}
name: "Y"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 10
      }
      dim {
        size: -1
      }
    }
  }
}
name: "MatMul"
op: "MatMul"
input: "W1/read"
input: "X"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
name: "Add"
op: "Add"
input: "MatMul"
input: "b1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Relu"
op: "Relu"
input: "Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MatMul_1"
op: "MatMul"
input: "W2/read"
input: "Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
name: "Add_1"
op: "Add"
input: "MatMul_1"
input: "b2/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Relu_1"
op: "Relu"
input: "Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "MatMul_2"
op: "MatMul"
input: "W3/read"
input: "Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
name: "Add_2"
op: "Add"
input: "MatMul_2"
input: "b3/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "Softmax"
op: "Softmax"
input: "Add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/add/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0000000116860974e-07
    }
  }
}
name: "log_loss/add"
op: "Add"
input: "Softmax"
input: "log_loss/add/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/Log"
op: "Log"
input: "log_loss/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/Mul"
op: "Mul"
input: "Y"
input: "log_loss/Log"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/Neg"
op: "Neg"
input: "log_loss/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "log_loss/sub"
op: "Sub"
input: "log_loss/sub/x"
input: "Y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/sub_1/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "log_loss/sub_1"
op: "Sub"
input: "log_loss/sub_1/x"
input: "Softmax"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/add_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0000000116860974e-07
    }
  }
}
name: "log_loss/add_1"
op: "Add"
input: "log_loss/sub_1"
input: "log_loss/add_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/Log_1"
op: "Log"
input: "log_loss/add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/Mul_1"
op: "Mul"
input: "log_loss/sub"
input: "log_loss/Log_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/sub_2"
op: "Sub"
input: "log_loss/Neg"
input: "log_loss/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/assert_broadcastable/weights"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "log_loss/assert_broadcastable/weights/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "log_loss/assert_broadcastable/weights/rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
name: "log_loss/assert_broadcastable/values/shape"
op: "Shape"
input: "log_loss/sub_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "log_loss/assert_broadcastable/values/rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
name: "log_loss/assert_broadcastable/static_scalar_check_success"
op: "NoOp"
name: "log_loss/ToFloat/x"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "log_loss/Mul_2"
op: "Mul"
input: "log_loss/sub_2"
input: "log_loss/ToFloat/x"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/Const"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
name: "log_loss/Sum"
op: "Sum"
input: "log_loss/Mul_2"
input: "log_loss/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "log_loss/num_present/Equal/y"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "log_loss/num_present/Equal"
op: "Equal"
input: "log_loss/ToFloat/x"
input: "log_loss/num_present/Equal/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/num_present/zeros_like"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
name: "log_loss/num_present/ones_like/Shape"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "log_loss/num_present/ones_like/Const"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "log_loss/num_present/ones_like"
op: "Fill"
input: "log_loss/num_present/ones_like/Shape"
input: "log_loss/num_present/ones_like/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "log_loss/num_present/Select"
op: "Select"
input: "log_loss/num_present/Equal"
input: "log_loss/num_present/zeros_like"
input: "log_loss/num_present/ones_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "log_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
name: "log_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
op: "Shape"
input: "log_loss/sub_2"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "log_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
name: "log_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
op: "NoOp"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
name: "log_loss/num_present/broadcast_weights/ones_like/Shape"
op: "Shape"
input: "log_loss/sub_2"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
input: "^log_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "log_loss/num_present/broadcast_weights/ones_like/Const"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
input: "^log_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "log_loss/num_present/broadcast_weights/ones_like"
op: "Fill"
input: "log_loss/num_present/broadcast_weights/ones_like/Shape"
input: "log_loss/num_present/broadcast_weights/ones_like/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "log_loss/num_present/broadcast_weights"
op: "Mul"
input: "log_loss/num_present/Select"
input: "log_loss/num_present/broadcast_weights/ones_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "log_loss/num_present/Const"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
name: "log_loss/num_present"
op: "Sum"
input: "log_loss/num_present/broadcast_weights"
input: "log_loss/num_present/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "log_loss/Const_1"
op: "Const"
input: "^log_loss/assert_broadcastable/static_scalar_check_success"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "log_loss/Sum_1"
op: "Sum"
input: "log_loss/Sum"
input: "log_loss/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "log_loss/value"
op: "DivNoNan"
input: "log_loss/Sum_1"
input: "log_loss/num_present"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/grad_ys_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
name: "gradients/Fill"
op: "Fill"
input: "gradients/Shape"
input: "gradients/grad_ys_0"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/value_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/log_loss/value_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/log_loss/value_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/log_loss/value_grad/Shape"
input: "gradients/log_loss/value_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/value_grad/div_no_nan"
op: "DivNoNan"
input: "gradients/Fill"
input: "log_loss/num_present"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/value_grad/Sum"
op: "Sum"
input: "gradients/log_loss/value_grad/div_no_nan"
input: "gradients/log_loss/value_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/value_grad/Reshape"
op: "Reshape"
input: "gradients/log_loss/value_grad/Sum"
input: "gradients/log_loss/value_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/value_grad/Neg"
op: "Neg"
input: "log_loss/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/value_grad/div_no_nan_1"
op: "DivNoNan"
input: "gradients/log_loss/value_grad/Neg"
input: "log_loss/num_present"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/value_grad/div_no_nan_2"
op: "DivNoNan"
input: "gradients/log_loss/value_grad/div_no_nan_1"
input: "log_loss/num_present"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/value_grad/mul"
op: "Mul"
input: "gradients/Fill"
input: "gradients/log_loss/value_grad/div_no_nan_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/value_grad/Sum_1"
op: "Sum"
input: "gradients/log_loss/value_grad/mul"
input: "gradients/log_loss/value_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/value_grad/Reshape_1"
op: "Reshape"
input: "gradients/log_loss/value_grad/Sum_1"
input: "gradients/log_loss/value_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/value_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/log_loss/value_grad/Reshape"
input: "^gradients/log_loss/value_grad/Reshape_1"
name: "gradients/log_loss/value_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/log_loss/value_grad/Reshape"
input: "^gradients/log_loss/value_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/value_grad/Reshape"
    }
  }
}
name: "gradients/log_loss/value_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/log_loss/value_grad/Reshape_1"
input: "^gradients/log_loss/value_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/value_grad/Reshape_1"
    }
  }
}
name: "gradients/log_loss/Sum_1_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/log_loss/Sum_1_grad/Reshape"
op: "Reshape"
input: "gradients/log_loss/value_grad/tuple/control_dependency"
input: "gradients/log_loss/Sum_1_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Sum_1_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/log_loss/Sum_1_grad/Tile"
op: "Tile"
input: "gradients/log_loss/Sum_1_grad/Reshape"
input: "gradients/log_loss/Sum_1_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Sum_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}
name: "gradients/log_loss/Sum_grad/Reshape"
op: "Reshape"
input: "gradients/log_loss/Sum_1_grad/Tile"
input: "gradients/log_loss/Sum_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Sum_grad/Shape"
op: "Shape"
input: "log_loss/Mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Sum_grad/Tile"
op: "Tile"
input: "gradients/log_loss/Sum_grad/Reshape"
input: "gradients/log_loss/Sum_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_2_grad/Shape"
op: "Shape"
input: "log_loss/sub_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_2_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/log_loss/Mul_2_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/log_loss/Mul_2_grad/Shape"
input: "gradients/log_loss/Mul_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_2_grad/Mul"
op: "Mul"
input: "gradients/log_loss/Sum_grad/Tile"
input: "log_loss/ToFloat/x"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/Mul_2_grad/Sum"
op: "Sum"
input: "gradients/log_loss/Mul_2_grad/Mul"
input: "gradients/log_loss/Mul_2_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/Mul_2_grad/Reshape"
op: "Reshape"
input: "gradients/log_loss/Mul_2_grad/Sum"
input: "gradients/log_loss/Mul_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_2_grad/Mul_1"
op: "Mul"
input: "log_loss/sub_2"
input: "gradients/log_loss/Sum_grad/Tile"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/Mul_2_grad/Sum_1"
op: "Sum"
input: "gradients/log_loss/Mul_2_grad/Mul_1"
input: "gradients/log_loss/Mul_2_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/Mul_2_grad/Reshape_1"
op: "Reshape"
input: "gradients/log_loss/Mul_2_grad/Sum_1"
input: "gradients/log_loss/Mul_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/log_loss/Mul_2_grad/Reshape"
input: "^gradients/log_loss/Mul_2_grad/Reshape_1"
name: "gradients/log_loss/Mul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/log_loss/Mul_2_grad/Reshape"
input: "^gradients/log_loss/Mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/Mul_2_grad/Reshape"
    }
  }
}
name: "gradients/log_loss/Mul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/log_loss/Mul_2_grad/Reshape_1"
input: "^gradients/log_loss/Mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/Mul_2_grad/Reshape_1"
    }
  }
}
name: "gradients/log_loss/sub_2_grad/Shape"
op: "Shape"
input: "log_loss/Neg"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/sub_2_grad/Shape_1"
op: "Shape"
input: "log_loss/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/sub_2_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/log_loss/sub_2_grad/Shape"
input: "gradients/log_loss/sub_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/sub_2_grad/Sum"
op: "Sum"
input: "gradients/log_loss/Mul_2_grad/tuple/control_dependency"
input: "gradients/log_loss/sub_2_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/sub_2_grad/Reshape"
op: "Reshape"
input: "gradients/log_loss/sub_2_grad/Sum"
input: "gradients/log_loss/sub_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/sub_2_grad/Sum_1"
op: "Sum"
input: "gradients/log_loss/Mul_2_grad/tuple/control_dependency"
input: "gradients/log_loss/sub_2_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/sub_2_grad/Neg"
op: "Neg"
input: "gradients/log_loss/sub_2_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/sub_2_grad/Reshape_1"
op: "Reshape"
input: "gradients/log_loss/sub_2_grad/Neg"
input: "gradients/log_loss/sub_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/sub_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/log_loss/sub_2_grad/Reshape"
input: "^gradients/log_loss/sub_2_grad/Reshape_1"
name: "gradients/log_loss/sub_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/log_loss/sub_2_grad/Reshape"
input: "^gradients/log_loss/sub_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/sub_2_grad/Reshape"
    }
  }
}
name: "gradients/log_loss/sub_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/log_loss/sub_2_grad/Reshape_1"
input: "^gradients/log_loss/sub_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/sub_2_grad/Reshape_1"
    }
  }
}
name: "gradients/log_loss/Neg_grad/Neg"
op: "Neg"
input: "gradients/log_loss/sub_2_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/Mul_1_grad/Shape"
op: "Shape"
input: "log_loss/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_1_grad/Shape_1"
op: "Shape"
input: "log_loss/Log_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/log_loss/Mul_1_grad/Shape"
input: "gradients/log_loss/Mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_1_grad/Mul"
op: "Mul"
input: "gradients/log_loss/sub_2_grad/tuple/control_dependency_1"
input: "log_loss/Log_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/Mul_1_grad/Sum"
op: "Sum"
input: "gradients/log_loss/Mul_1_grad/Mul"
input: "gradients/log_loss/Mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/Mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/log_loss/Mul_1_grad/Sum"
input: "gradients/log_loss/Mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_1_grad/Mul_1"
op: "Mul"
input: "log_loss/sub"
input: "gradients/log_loss/sub_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/Mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/log_loss/Mul_1_grad/Mul_1"
input: "gradients/log_loss/Mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/Mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/log_loss/Mul_1_grad/Sum_1"
input: "gradients/log_loss/Mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/log_loss/Mul_1_grad/Reshape"
input: "^gradients/log_loss/Mul_1_grad/Reshape_1"
name: "gradients/log_loss/Mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/log_loss/Mul_1_grad/Reshape"
input: "^gradients/log_loss/Mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/Mul_1_grad/Reshape"
    }
  }
}
name: "gradients/log_loss/Mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/log_loss/Mul_1_grad/Reshape_1"
input: "^gradients/log_loss/Mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/Mul_1_grad/Reshape_1"
    }
  }
}
name: "gradients/log_loss/Mul_grad/Shape"
op: "Shape"
input: "Y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_grad/Shape_1"
op: "Shape"
input: "log_loss/Log"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/log_loss/Mul_grad/Shape"
input: "gradients/log_loss/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_grad/Mul"
op: "Mul"
input: "gradients/log_loss/Neg_grad/Neg"
input: "log_loss/Log"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/Mul_grad/Sum"
op: "Sum"
input: "gradients/log_loss/Mul_grad/Mul"
input: "gradients/log_loss/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/log_loss/Mul_grad/Sum"
input: "gradients/log_loss/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_grad/Mul_1"
op: "Mul"
input: "Y"
input: "gradients/log_loss/Neg_grad/Neg"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/log_loss/Mul_grad/Mul_1"
input: "gradients/log_loss/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/log_loss/Mul_grad/Sum_1"
input: "gradients/log_loss/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/log_loss/Mul_grad/Reshape"
input: "^gradients/log_loss/Mul_grad/Reshape_1"
name: "gradients/log_loss/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/log_loss/Mul_grad/Reshape"
input: "^gradients/log_loss/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/Mul_grad/Reshape"
    }
  }
}
name: "gradients/log_loss/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/log_loss/Mul_grad/Reshape_1"
input: "^gradients/log_loss/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/Mul_grad/Reshape_1"
    }
  }
}
name: "gradients/log_loss/Log_1_grad/Reciprocal"
op: "Reciprocal"
input: "log_loss/add_1"
input: "^gradients/log_loss/Mul_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/Log_1_grad/mul"
op: "Mul"
input: "gradients/log_loss/Mul_1_grad/tuple/control_dependency_1"
input: "gradients/log_loss/Log_1_grad/Reciprocal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/Log_grad/Reciprocal"
op: "Reciprocal"
input: "log_loss/add"
input: "^gradients/log_loss/Mul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/Log_grad/mul"
op: "Mul"
input: "gradients/log_loss/Mul_grad/tuple/control_dependency_1"
input: "gradients/log_loss/Log_grad/Reciprocal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/add_1_grad/Shape"
op: "Shape"
input: "log_loss/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/add_1_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/log_loss/add_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/log_loss/add_1_grad/Shape"
input: "gradients/log_loss/add_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/add_1_grad/Sum"
op: "Sum"
input: "gradients/log_loss/Log_1_grad/mul"
input: "gradients/log_loss/add_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/add_1_grad/Reshape"
op: "Reshape"
input: "gradients/log_loss/add_1_grad/Sum"
input: "gradients/log_loss/add_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/add_1_grad/Sum_1"
op: "Sum"
input: "gradients/log_loss/Log_1_grad/mul"
input: "gradients/log_loss/add_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/add_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/log_loss/add_1_grad/Sum_1"
input: "gradients/log_loss/add_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/add_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/log_loss/add_1_grad/Reshape"
input: "^gradients/log_loss/add_1_grad/Reshape_1"
name: "gradients/log_loss/add_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/log_loss/add_1_grad/Reshape"
input: "^gradients/log_loss/add_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/add_1_grad/Reshape"
    }
  }
}
name: "gradients/log_loss/add_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/log_loss/add_1_grad/Reshape_1"
input: "^gradients/log_loss/add_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/add_1_grad/Reshape_1"
    }
  }
}
name: "gradients/log_loss/add_grad/Shape"
op: "Shape"
input: "Softmax"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/add_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/log_loss/add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/log_loss/add_grad/Shape"
input: "gradients/log_loss/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/add_grad/Sum"
op: "Sum"
input: "gradients/log_loss/Log_grad/mul"
input: "gradients/log_loss/add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/add_grad/Reshape"
op: "Reshape"
input: "gradients/log_loss/add_grad/Sum"
input: "gradients/log_loss/add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/add_grad/Sum_1"
op: "Sum"
input: "gradients/log_loss/Log_grad/mul"
input: "gradients/log_loss/add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/add_grad/Reshape_1"
op: "Reshape"
input: "gradients/log_loss/add_grad/Sum_1"
input: "gradients/log_loss/add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/log_loss/add_grad/Reshape"
input: "^gradients/log_loss/add_grad/Reshape_1"
name: "gradients/log_loss/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/log_loss/add_grad/Reshape"
input: "^gradients/log_loss/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/add_grad/Reshape"
    }
  }
}
name: "gradients/log_loss/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/log_loss/add_grad/Reshape_1"
input: "^gradients/log_loss/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/add_grad/Reshape_1"
    }
  }
}
name: "gradients/log_loss/sub_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
name: "gradients/log_loss/sub_1_grad/Shape_1"
op: "Shape"
input: "Softmax"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/sub_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/log_loss/sub_1_grad/Shape"
input: "gradients/log_loss/sub_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/sub_1_grad/Sum"
op: "Sum"
input: "gradients/log_loss/add_1_grad/tuple/control_dependency"
input: "gradients/log_loss/sub_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/sub_1_grad/Reshape"
op: "Reshape"
input: "gradients/log_loss/sub_1_grad/Sum"
input: "gradients/log_loss/sub_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/sub_1_grad/Sum_1"
op: "Sum"
input: "gradients/log_loss/add_1_grad/tuple/control_dependency"
input: "gradients/log_loss/sub_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/log_loss/sub_1_grad/Neg"
op: "Neg"
input: "gradients/log_loss/sub_1_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/log_loss/sub_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/log_loss/sub_1_grad/Neg"
input: "gradients/log_loss/sub_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/log_loss/sub_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/log_loss/sub_1_grad/Reshape"
input: "^gradients/log_loss/sub_1_grad/Reshape_1"
name: "gradients/log_loss/sub_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/log_loss/sub_1_grad/Reshape"
input: "^gradients/log_loss/sub_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/sub_1_grad/Reshape"
    }
  }
}
name: "gradients/log_loss/sub_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/log_loss/sub_1_grad/Reshape_1"
input: "^gradients/log_loss/sub_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/sub_1_grad/Reshape_1"
    }
  }
}
name: "gradients/AddN"
op: "AddN"
input: "gradients/log_loss/add_grad/tuple/control_dependency"
input: "gradients/log_loss/sub_1_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/log_loss/add_grad/Reshape"
    }
  }
}
name: "gradients/Softmax_grad/mul"
op: "Mul"
input: "gradients/AddN"
input: "Softmax"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Softmax_grad/Sum/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
name: "gradients/Softmax_grad/Sum"
op: "Sum"
input: "gradients/Softmax_grad/mul"
input: "gradients/Softmax_grad/Sum/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
name: "gradients/Softmax_grad/sub"
op: "Sub"
input: "gradients/AddN"
input: "gradients/Softmax_grad/Sum"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Softmax_grad/mul_1"
op: "Mul"
input: "gradients/Softmax_grad/sub"
input: "Softmax"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Add_2_grad/Shape"
op: "Shape"
input: "MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_2_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\n\000\000\000\001\000\000\000"
    }
  }
}
name: "gradients/Add_2_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Add_2_grad/Shape"
input: "gradients/Add_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_2_grad/Sum"
op: "Sum"
input: "gradients/Softmax_grad/mul_1"
input: "gradients/Add_2_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Add_2_grad/Reshape"
op: "Reshape"
input: "gradients/Add_2_grad/Sum"
input: "gradients/Add_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_2_grad/Sum_1"
op: "Sum"
input: "gradients/Softmax_grad/mul_1"
input: "gradients/Add_2_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Add_2_grad/Reshape_1"
op: "Reshape"
input: "gradients/Add_2_grad/Sum_1"
input: "gradients/Add_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Add_2_grad/Reshape"
input: "^gradients/Add_2_grad/Reshape_1"
name: "gradients/Add_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Add_2_grad/Reshape"
input: "^gradients/Add_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Add_2_grad/Reshape"
    }
  }
}
name: "gradients/Add_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Add_2_grad/Reshape_1"
input: "^gradients/Add_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Add_2_grad/Reshape_1"
    }
  }
}
name: "gradients/MatMul_2_grad/MatMul"
op: "MatMul"
input: "gradients/Add_2_grad/tuple/control_dependency"
input: "Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
name: "gradients/MatMul_2_grad/MatMul_1"
op: "MatMul"
input: "W3/read"
input: "gradients/Add_2_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
name: "gradients/MatMul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_2_grad/MatMul"
input: "^gradients/MatMul_2_grad/MatMul_1"
name: "gradients/MatMul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_2_grad/MatMul"
input: "^gradients/MatMul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_2_grad/MatMul"
    }
  }
}
name: "gradients/MatMul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_2_grad/MatMul_1"
input: "^gradients/MatMul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_2_grad/MatMul_1"
    }
  }
}
name: "gradients/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/MatMul_2_grad/tuple/control_dependency_1"
input: "Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Add_1_grad/Shape"
op: "Shape"
input: "MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_1_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: ",\001\000\000\001\000\000\000"
    }
  }
}
name: "gradients/Add_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Add_1_grad/Shape"
input: "gradients/Add_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_1_grad/Sum"
op: "Sum"
input: "gradients/Relu_1_grad/ReluGrad"
input: "gradients/Add_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Add_1_grad/Reshape"
op: "Reshape"
input: "gradients/Add_1_grad/Sum"
input: "gradients/Add_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_1_grad/Sum_1"
op: "Sum"
input: "gradients/Relu_1_grad/ReluGrad"
input: "gradients/Add_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Add_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/Add_1_grad/Sum_1"
input: "gradients/Add_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Add_1_grad/Reshape"
input: "^gradients/Add_1_grad/Reshape_1"
name: "gradients/Add_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Add_1_grad/Reshape"
input: "^gradients/Add_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Add_1_grad/Reshape"
    }
  }
}
name: "gradients/Add_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Add_1_grad/Reshape_1"
input: "^gradients/Add_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Add_1_grad/Reshape_1"
    }
  }
}
name: "gradients/MatMul_1_grad/MatMul"
op: "MatMul"
input: "gradients/Add_1_grad/tuple/control_dependency"
input: "Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
name: "gradients/MatMul_1_grad/MatMul_1"
op: "MatMul"
input: "W2/read"
input: "gradients/Add_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
name: "gradients/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_1_grad/MatMul"
input: "^gradients/MatMul_1_grad/MatMul_1"
name: "gradients/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_1_grad/MatMul"
input: "^gradients/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_1_grad/MatMul"
    }
  }
}
name: "gradients/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_1_grad/MatMul_1"
input: "^gradients/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_1_grad/MatMul_1"
    }
  }
}
name: "gradients/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/MatMul_1_grad/tuple/control_dependency_1"
input: "Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
name: "gradients/Add_grad/Shape"
op: "Shape"
input: "MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: ",\001\000\000\001\000\000\000"
    }
  }
}
name: "gradients/Add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Add_grad/Shape"
input: "gradients/Add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_grad/Sum"
op: "Sum"
input: "gradients/Relu_grad/ReluGrad"
input: "gradients/Add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Add_grad/Reshape"
op: "Reshape"
input: "gradients/Add_grad/Sum"
input: "gradients/Add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_grad/Sum_1"
op: "Sum"
input: "gradients/Relu_grad/ReluGrad"
input: "gradients/Add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
name: "gradients/Add_grad/Reshape_1"
op: "Reshape"
input: "gradients/Add_grad/Sum_1"
input: "gradients/Add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
name: "gradients/Add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Add_grad/Reshape"
input: "^gradients/Add_grad/Reshape_1"
name: "gradients/Add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Add_grad/Reshape"
input: "^gradients/Add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Add_grad/Reshape"
    }
  }
}
name: "gradients/Add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Add_grad/Reshape_1"
input: "^gradients/Add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Add_grad/Reshape_1"
    }
  }
}
name: "gradients/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/Add_grad/tuple/control_dependency"
input: "X"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
name: "gradients/MatMul_grad/MatMul_1"
op: "MatMul"
input: "W1/read"
input: "gradients/Add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
name: "gradients/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_grad/MatMul"
input: "^gradients/MatMul_grad/MatMul_1"
name: "gradients/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_grad/MatMul"
input: "^gradients/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_grad/MatMul"
    }
  }
}
name: "gradients/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_grad/MatMul_1"
input: "^gradients/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_grad/MatMul_1"
    }
  }
}
name: "GradientDescent/learning_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10000000149011612
    }
  }
}
name: "GradientDescent/update_W1/ApplyGradientDescent"
op: "ApplyGradientDescent"
input: "W1"
input: "GradientDescent/learning_rate"
input: "gradients/MatMul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "GradientDescent/update_W2/ApplyGradientDescent"
op: "ApplyGradientDescent"
input: "W2"
input: "GradientDescent/learning_rate"
input: "gradients/MatMul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "GradientDescent/update_W3/ApplyGradientDescent"
op: "ApplyGradientDescent"
input: "W3"
input: "GradientDescent/learning_rate"
input: "gradients/MatMul_2_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "GradientDescent/update_b1/ApplyGradientDescent"
op: "ApplyGradientDescent"
input: "b1"
input: "GradientDescent/learning_rate"
input: "gradients/Add_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "GradientDescent/update_b2/ApplyGradientDescent"
op: "ApplyGradientDescent"
input: "b2"
input: "GradientDescent/learning_rate"
input: "gradients/Add_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "GradientDescent/update_b3/ApplyGradientDescent"
op: "ApplyGradientDescent"
input: "b3"
input: "GradientDescent/learning_rate"
input: "gradients/Add_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
name: "GradientDescent"
op: "NoOp"
input: "^GradientDescent/update_W1/ApplyGradientDescent"
input: "^GradientDescent/update_W2/ApplyGradientDescent"
input: "^GradientDescent/update_W3/ApplyGradientDescent"
input: "^GradientDescent/update_b1/ApplyGradientDescent"
input: "^GradientDescent/update_b2/ApplyGradientDescent"
input: "^GradientDescent/update_b3/ApplyGradientDescent"
name: "save/filename/input"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "model"
    }
  }
}
name: "save/filename"
op: "PlaceholderWithDefault"
input: "save/filename/input"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
name: "save/Const"
op: "PlaceholderWithDefault"
input: "save/filename"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
name: "save/SaveV2/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 6
        }
      }
      string_val: "W1"
      string_val: "W2"
      string_val: "W3"
      string_val: "b1"
      string_val: "b2"
      string_val: "b3"
    }
  }
}
name: "save/SaveV2/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 6
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}
name: "save/SaveV2"
op: "SaveV2"
input: "save/Const"
input: "save/SaveV2/tensor_names"
input: "save/SaveV2/shape_and_slices"
input: "W1"
input: "W2"
input: "W3"
input: "b1"
input: "b2"
input: "b3"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}
name: "save/control_dependency"
op: "Identity"
input: "save/Const"
input: "^save/SaveV2"
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@save/Const"
    }
  }
}
name: "save/RestoreV2/tensor_names"
op: "Const"
device: "/device:CPU:0"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 6
        }
      }
      string_val: "W1"
      string_val: "W2"
      string_val: "W3"
      string_val: "b1"
      string_val: "b2"
      string_val: "b3"
    }
  }
}
name: "save/RestoreV2/shape_and_slices"
op: "Const"
device: "/device:CPU:0"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 6
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}
name: "save/RestoreV2"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2/tensor_names"
input: "save/RestoreV2/shape_and_slices"
device: "/device:CPU:0"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}
name: "save/Assign"
op: "Assign"
input: "W1"
input: "save/RestoreV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_1"
op: "Assign"
input: "W2"
input: "save/RestoreV2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_2"
op: "Assign"
input: "W3"
input: "save/RestoreV2:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@W3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_3"
op: "Assign"
input: "b1"
input: "save/RestoreV2:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b1"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_4"
op: "Assign"
input: "b2"
input: "save/RestoreV2:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b2"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/Assign_5"
op: "Assign"
input: "b3"
input: "save/RestoreV2:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@b3"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
name: "save/restore_all"
op: "NoOp"
input: "^save/Assign"
input: "^save/Assign_1"
input: "^save/Assign_2"
input: "^save/Assign_3"
input: "^save/Assign_4"
input: "^save/Assign_5"
name: "init"
op: "NoOp"
input: "^W1/Assign"
input: "^W2/Assign"
input: "^W3/Assign"
input: "^b1/Assign"
input: "^b2/Assign"
input: "^b3/Assign"
